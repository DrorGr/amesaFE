name: Build and Deploy Frontend

on:
  push:
    branches: [dev, stage]
  pull_request:
    branches: [main, dev, stage]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging
        - development

env:
  NODE_VERSION: '20'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint
        continue-on-error: true

      - name: Run tests
        run: npm run test:ci
        continue-on-error: true

      - name: Build for development
        if: github.ref == 'refs/heads/dev'
        run: npm run build
        env:
          API_URL: http://localhost:5000
          BACKEND_URL: http://localhost:5000
          FRONTEND_URL: http://localhost:4200

      - name: Build for staging
        if: github.ref == 'refs/heads/stage'
        run: npm run build:prod
        env:
          API_URL: https://stage-api.amesa.com
          BACKEND_URL: https://stage-api.amesa.com
          FRONTEND_URL: https://stage.amesa.com

      - name: Build for production
        if: github.ref == 'refs/heads/main'
        run: npm run build:prod
        env:
          API_URL: https://api.amesa.com
          BACKEND_URL: https://api.amesa.com
          FRONTEND_URL: https://amesa.com

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS }}
          aws-secret-access-key: ${{ secrets.ENV }}
          aws-region: eu-north-1

      - name: Deploy to AWS S3 (Dev)
        run: |
          echo "ðŸš€ Deploying to S3 bucket: amesa-frontend-dev"
          aws s3 sync dist/demo s3://amesa-frontend-dev --delete --cache-control "public, max-age=31536000"
          aws s3 cp dist/demo/index.html s3://amesa-frontend-dev/index.html --cache-control "no-cache, no-store, must-revalidate"
          echo "âœ… Dev deployment completed!"

      - name: Invalidate CloudFront Cache (Dev)
        run: |
          echo "ðŸ”„ Invalidating CloudFront: E2XBDFAUZJTI59"
          aws cloudfront create-invalidation --distribution-id E2XBDFAUZJTI59 --paths "/*"
          echo "âœ… CloudFront cache invalidated!"

  deploy-stage:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/stage'
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS }}
          aws-secret-access-key: ${{ secrets.ENV }}
          aws-region: eu-north-1

      - name: Deploy to AWS S3 (Stage)
        run: |
          echo "ðŸš€ Deploying to S3 bucket: amesa-frontend-stage"
          aws s3 sync dist/demo s3://amesa-frontend-stage --delete --cache-control "public, max-age=31536000"
          aws s3 cp dist/demo/index.html s3://amesa-frontend-stage/index.html --cache-control "no-cache, no-store, must-revalidate"
          echo "âœ… Stage deployment completed!"

      - name: Invalidate CloudFront Cache (Stage)
        run: |
          echo "ðŸ”„ Invalidating CloudFront: E1D7XQHFF1469W"
          aws cloudfront create-invalidation --distribution-id E1D7XQHFF1469W --paths "/*"
          echo "âœ… CloudFront cache invalidated!"

  deploy-prod:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist/

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS }}
          aws-secret-access-key: ${{ secrets.ENV }}
          aws-region: eu-north-1

      - name: Deploy to AWS S3 (Production)
        run: |
          echo "ðŸš€ Deploying to S3 bucket: amesa-frontend-prod"
          aws s3 sync dist/demo s3://amesa-frontend-prod --delete --cache-control "public, max-age=31536000"
          aws s3 cp dist/demo/index.html s3://amesa-frontend-prod/index.html --cache-control "no-cache, no-store, must-revalidate"
          echo "âœ… Production deployment completed!"

      - name: Invalidate CloudFront Cache (Production)
        run: |
          echo "ðŸ”„ Invalidating CloudFront: d3bkt41uo2lxir"
          aws cloudfront create-invalidation --distribution-id d3bkt41uo2lxir --paths "/*"
          echo "âœ… CloudFront cache invalidated!"
